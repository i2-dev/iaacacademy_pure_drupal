<?php

// use Drupal\Core\Database\Database;

/**
 * @file
 * The main module file.
 *
 * The main module file contains hooks to create the permissions used by the
 * module, to log the data, and to expose the module to views.
 */

/**
 * Implements hook_cron().
 *
 * We implement hook_cron() to do "background" processing. It gets called every
 * time the Drupal cron runs. We then decide what has to happen in response.
 *
 */
function i2_flood_notif_via_cronjob_cron()
{
   $count_of_fail_for_notif = 5;
   $to_email = "wilsonleeapp@gmail.com";

   $site_name = \Drupal::config('system.site')->get('name');
   $checking_begin_ts = REQUEST_TIME;
   $checking_end_ts = REQUEST_TIME;

   // $checking_begin = format_date($checking_begin_ts, 'long');     // Drupal 8 outdated
   $formatter = \Drupal::service('date.formatter');
   $checking_begin = $formatter->format($checking_begin_ts, 'long');


   $result = \Drupal::database()->select('flood', 'f')
      ->fields('f', array('fid', 'event', 'identifier', 'timestamp'))
      ->condition('event', "%login_user%", 'LIKE')
      ->execute()
      ->fetchAllAssoc('fid');

   $rows = array();
   $rows = null;

   $failed_user_data = array();

   $email_body_details = "";

   foreach ($result as $row => $content) {
      $rows[] = array(
         'data' => array(
            $content->fid,
            $content->event,
            $content->identifier,
            $content->timestamp,
         )
      );

      $identifier_str = $content->identifier;
      $identifier_arr = explode("-", $identifier_str);
      $uid = $identifier_arr[0];
      $client_ip = $identifier_arr[1];


      // User Info
      $user = \Drupal\user\Entity\User::load((int)$uid);
      $user_name = $user->name->getString();

      if (!(isset($failed_user_data["uid_" . $uid]))) {
         $failed_user_data["uid_" . $uid]["user"]["uid"] = $uid;
         $failed_user_data["uid_" . $uid]["user"]["name"] = $user_name;
         $failed_user_data["uid_" . $uid]["count"] = 1;
         $failed_user_data["uid_" . $uid]["ip_address"] = $client_ip . ", ";
      } else {
         $failed_user_data["uid_" . $uid]["count"]++;
         $failed_user_data["uid_" . $uid]["ip_address"] .= $client_ip . ", ";
      }
   }


   // Analytics the array of failed
   foreach ($failed_user_data as $key => $val) {
      if ($val["count"] >= $count_of_fail_for_notif) {
         $email_body_details .= "------------------------------------ <br>";
         $email_body_details .= "[Account Name] :" . $val["user"]["name"] . " (uid: " . $val["user"]["uid"] . ") <br>";
         $email_body_details .= "[Number of Attempts] :" . $count_of_fail_for_notif . "<br>";
         $email_body_details .= "[Time of Attempts] :" . $val["count"] . "<br>";
         $email_body_details .= "[IP Address] :" . $val["ip_address"] . "<br>";
         $email_body_details .= "------------------------------------ <br>";
      }
   }

   // Send the email
   if ($email_body_details != "") {
      $email_msg = json_encode($failed_user_data);
      // $email_msg = "This is a flood notification, Please check the logs for more information. ";

      \Drupal::logger('i2_flood_notif_via_cronjob')->notice($email_msg);

      // Send Email Notif to site.mail
      $email_title = 'Multiple Failed Login Attempts Detected IAAC Mainsite at ' . $checking_begin;

      $email_body_intro = 'These attempts occurred within a short period and were flagged by our security system. <br>';
      $email_body_intro .= '================================================================== <br>';
      $email_body_intro .= 'Details of the Activity: <br>';

      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'i2_flood_notif_via_cronjob';
      $key = 'i2_flood_notif_via_cronjob_finished';
      // $to = \Drupal::config('system.site')->get('mail');
      $to = $to_email;

      $params['email_title'] = $email_title;
      $params['email_message'] = $email_body_intro . $email_body_details;

      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = true;

      $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);

      if ($result['result'] !== true) {
         $message = t('There was a problem sending your message and it was not sent.');
         \Drupal::logger('i2_flood_notif_via_cronjob')->error($message);
      } else {
         $message = t('Your message has been sent.');
         \Drupal::logger('i2_flood_notif_via_cronjob')->notice($message);
      }
   }
}




/**
 * Implements hook_mail()
 */
// Ref: https://www.valuebound.com/resources/blog/how-to-send-mail-programmatically-drupal-8

function i2_flood_notif_via_cronjob_mail($key, &$message, $params)
{
   $options = array(
      'langcode' => $message['langcode'],
   );

   switch ($key) {
      case 'i2_flood_notif_via_cronjob_finished':
         $message['from'] = \Drupal::config('system.site')->get('mail');
         $message['subject'] = t('@title', array('@title' => $params['email_title']), $options);
         $message['body'][] = $params['email_message'];
         break;
   }
}
